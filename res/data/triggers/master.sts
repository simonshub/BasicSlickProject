
/* 
 * 
 * MASTER SCRIPT
 * 
 * This script is included into every other trigger script automatically.
 * Place any code you want to affect the entire game here.
 * 
 */



// custom Java class bindings
var actor = Java.type('engine.game.actors.Actor');
var entity = Java.type('engine.game.entities.Entity');
var entity_var = Java.type('engine.game.entities.EntityVar');
var entity_type = Java.type('engine.game.entities.EntityType');
var trigger = Java.type('engine.game.triggers.Trigger');
var event = Java.type('engine.game.triggers.TriggerEvent');
var game_map = Java.type('engine.game.maps.GameMap');
var tile_net = Java.type('engine.game.maps.TileNet');

var gui = Java.type('engine.gui.GuiController');
var gui_element = Java.type('engine.gui.GuiElement');
var gui_button = Java.type('engine.gui.elements.SButton');
var gui_container = Java.type('engine.gui.elements.SContainer');
var gui_dropdown = Java.type('engine.gui.elements.SDropDown');
var gui_label = Java.type('engine.gui.elements.SLabel');
var gui_spinner = Java.type('engine.gui.elements.SSpinner');
var gui_table = Java.type('engine.gui.elements.STable');
var gui_textarea = Java.type('engine.gui.elements.STextArea');
var gui_textfield = Java.type('engine.gui.elements.STextField');
var gui_togglebutton = Java.type('engine.gui.elements.SToggleButton');



var _res = Java.type('engine.environment.ResMgr');
var _consts = Java.type('engine.environment.Consts');
var _settings = Java.type('engine.environment.Settings');
var _log = Java.type('engine.logger.Log');
var _log_level = Java.type('engine.logger.Log.LogLevel');
var _log_type = Java.type('engine.logger.LogType');
var _data = Java.type('engine.environment.Data');
var _manager = Java.type('engine.game.triggers.TriggerMgr');



var game_speed = _data.gameSpeed;



function console (text) {
	_manager.console(text);
}
function error (text) {
	_manager.console("ERROR: "+text);
}
function object (obj) {
	return JSON.stringify(obj);
}



function get_entity_type (name) {
	return _res.getEntityType(name);
}
function get_entity (name) {
	var ent = _data.currentMap.getEntity(name);
	return ent;
}
function get_actor (name) {
	return _res.getActor(name);
}
function get_map (name) {
	return _res.getMap(name);
}



function get_var (ent, varname) {
	return ent.getVar(varname).value;
}
function get_var_realtime (ent, varname) {
	return ent.getVar(varname).value*delta;
}



function get_playing_map () {
	return _data.currentMap.name;
}
function load_map (name) {
	return _data.loadMap(name);
}
function unload_map () {
	_data.unloadMap();
}
function change_state (id) {
	_data.changeState(id);
}



function is_key_down (key) {
	return _manager.isKeyDown(key);
}
function any_key () {
	return _manager.isAnyKeyDown();
}